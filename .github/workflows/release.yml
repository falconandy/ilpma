name: Release

on:
  workflow_dispatch:
    inputs:
      packageVersion:
        description: "The version to publish (e.g. 1.2.3, prerelease, patch, minor, major)"
        required: true
      distTag:
        description: "The dist-tag to publish (e.g. latest, beta)"
        required: true
        default: "latest"

jobs:
  authorize:
    name: Authorize
    runs-on: ubuntu-latest
    steps:
    - name: ${{ github.actor }} permission check to do a release
      uses: "lannonbr/repo-permission-check-action@2.0.2"
      with:
        permission: "write"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [authorize]
    env:
      PACKAGE_VERSION: ${{ github.event.inputs.packageVersion }}
      DIST_TAG: ${{ github.event.inputs.distTag }}
    strategy:
      matrix:
        node-version: ["12.x"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.ILPMA_DEPLOY_KEY }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Lint
        run: yarn lint

#      - name: Test
#        run: yarn test-ci

      - name: Configure Git User
        run: |
          git config --global user.name ilpma-sdk-bot
          git config --global user.email support@ilpma.com

      - name: Configure NPM User
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_PUBLISH_TOKEN }}" > ~/.npmrc
          npm whoami

      - name: Release (NPM)
        env:
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
        run: |
          npm version ${{ env.PACKAGE_VERSION }} -m "v%s"
          npm publish --tag ${{ env.DIST_TAG }}

      - name: Push Git changes
        run: |
          git push
          git push --tags
